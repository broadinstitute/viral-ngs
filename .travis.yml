language: python
sudo: required 
dist: trusty

matrix:
    fast_finish: true
    include:
        - os: linux
          python: 2.7
          env: PERFORM_TESTING=true
        - os: linux
          python: 3.6
          env: PERFORM_TESTING=true
        - os: linux
          python: 3.5
          env: BUILD_DOCS=true
        - os: linux
          python: 3.6
          env:
            - BUILD_PACKAGE=conda
            # $ANACONDA_TOKEN for uploading builds to anaconda.org ("broad-viral" channel)
            - secure: SLPB86BpMIiNncMioxVk9cLrqaSNt8F1QDtxkrdLq9j7wXzFqGa7cipG6UJ6Om7GvoF49DpACfGPTA4ycr+T4cH3pWXpBHrBhV8TyKJb23cOmg5+7zqJQTzuwNqKOT7t9rnBkf1uzVXBcgqKaD6XW/nEvNFK00I0cvjlCp8vgxE=
            # $TRAVIS_ACCESS_TOKEN_FOR_OTHER_REPO (viral-ngs-deploy)
            - secure: ChB0K3gPr5HknxYA41xCrpgChHDmLkqc79p1NABB/tbqOEnrPzDPqE+FU4/QlmeV96jMYn4uyLVauJpzVXyBIVoOa8guqoF5VdiKlAhaUwh9UQJ75i3SKQtGBrqaTXSDVI1vJARMiGabduCrcNJxVsxV9Bm+YzTq6tuhWyqR4fs=
        - os: linux
          env:
            - BUILD_PACKAGE=docker
            # DOCKER_USER
            - secure: hYX8492Wqpq3yqv+eHBV9c6VY8JlUSS8mUDfT1eWNEZF2vw8WrnTt8SrLIPC8etQUk1ZaSI/8XbJQKEr9LRqgvuO07AIv6BxYCg9l9BPHCj6B2YTTPo2qPkPapfvtGVd7PUZcWDUvzvPxJqMveuKVkTnCuuQSWwR68Y/Khxj8UY=
            # DOCKER_PASS
            - secure: QYylIMLvn1op6d//5yBD7KpquNxK/+xxQxIJLXWFgIl08sdT/MvrI6edgm3k8CumS7735eSV6C+KGOkF9JqM12aGUK/3PPckFGY+h/j4zQX26taT+6221ozbzF6hqYk6qm86FT5QVkBFLxsoDvt0Sh+1FPeVsWJf0o9yrLTrj2E=
            # DOCKER_EMAIL (for broadinstitute/viral-ngs on Docker Hub)
            - secure: kKSA73w+i9MfIbLBx7FN85SImGn+Rbhke554q39DSkU0++Q8zyRj7862oOKX3XBlBfeFrZaDzuyk7D1WJvdOF48tQHTJVcoI5qvzFqn4qXjLN3oI2dsGWd154SmUH9uviNUKjNzVpzcdQ7nt+ntrR4FQHLf+gqn7PyCg2p0jD2w=
#        - os: osx
#          language: generic
#          env:
#              - TRAVIS_OSX_PYTHON_VERSION=py36
#              - TRAVIS_PYTHON_VERSION=3.6
#              - PERFORM_TESTING=true

cache:
  directories:
    - $HOME/misc_cache
    - $HOME/miniconda
  timeout: 480
before_cache:
  # Remove since we're caching the extracted directories
  - if [[ "$BUILD_PACKAGE" == "docker" || "$BUILD_DOCS" == "true" ]]; then mv $HOME/miniconda $HOME/no_cache_miniconda; else conda clean --tarballs --yes; fi
  # Conda's repodata cache
  - rm -rf tools/conda-cache/.pkgs/cache

env:
  global:
  - CACHE_DIR="$HOME/misc_cache"
  - MINICONDA_DIR="$HOME/miniconda"
  - PIP_DIR="$HOME/virtualenv"
  - GATK_PATH="$CACHE_DIR/GenomeAnalysisTK-3.6"
  - PYTHONIOENCODING=UTF8
  - BOTO_CONFIG=/dev/null # bogus value to override config on travis
  - _JAVA_OPTIONS="-Xmx3g" # overrides jvm opts set elsewhere; see: https://stackoverflow.com/questions/28327620/difference-between-java-options-java-tool-options-and-java-opts
  # $BUNDLE_SECRET for decrypting tarball of third-party tools
  - secure: KX7DwKRD85S7NgspxevgbulTtV+jHQIiM6NBus2/Ur/P0RMdpt0EQQ2wDq79qGN70bvvkw901N7EjSYd+GWCAM7StXtaxnLRrrZ3XI1gX7KMk8E3QzPf0zualLDs7cuQmL6l6WiElUAEqumLc7WGpLZZLdSPzNqFSg+CBKCmTI8=

git:
  depth: 50

before_install:
  - travis/before_install.sh

install:
  - if [[ "$BUILD_PACKAGE" == "conda" || -n "$PERFORM_TESTING" ]]; then source travis/install-conda.sh; fi
  - if [ -n "$PERFORM_TESTING" ]; then source travis/install-tools.sh; fi
  - if [ -n "$PERFORM_TESTING" ]; then travis/install-pip.sh; fi
  - if [[ "$BUILD_PACKAGE" == "conda" ]]; then travis/install-conda-build.sh; fi
  - if [[ "$BUILD_PACKAGE" == "docker" ]]; then travis/upgrade-docker.sh; fi
  - if [ -n "$BUILD_DOCS" ]; then travis/install-pip-docs.sh; fi

script:
  - if [ -n "$PERFORM_TESTING" ]; then travis/tests-long.sh; fi
  - if [ -n "$PERFORM_TESTING" ]; then travis/tests-unit.sh; fi
  - if [[ "$BUILD_PACKAGE" == "conda" ]]; then travis_wait travis/build-conda.sh; fi
  - if [[ "$BUILD_PACKAGE" == "docker" ]]; then travis_wait docker build --rm -t local/viral-ngs:build .; docker run --rm local/viral-ngs:build assembly.py --version; fi
  - if [ -n "$BUILD_DOCS" ]; then travis/build-docs.sh; fi

after_success:
  - if [ -n "$PERFORM_TESTING" ]; then coveralls; fi
  - if [[ "$BUILD_PACKAGE" == "docker" ]]; then travis/deploy-docker.sh; fi
  
after_script:
  # correct post-build failure on OSX due to non-zero exit code
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then set +e; fi
